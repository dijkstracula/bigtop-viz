[{"/Users/ntaylor/code/water/bigtop-viz/src/index.tsx":"1","/Users/ntaylor/code/water/bigtop-viz/src/reportWebVitals.ts":"2","/Users/ntaylor/code/water/bigtop-viz/src/App.tsx":"3","/Users/ntaylor/code/water/bigtop-viz/src/keyframe.ts":"4","/Users/ntaylor/code/water/bigtop-viz/src/components/KeyframeTable.tsx":"5","/Users/ntaylor/code/water/bigtop-viz/src/components/PlaybackControls.tsx":"6"},{"size":222,"mtime":1612035024487,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1611949820154,"results":"9","hashOfConfig":"8"},{"size":4320,"mtime":1612041930327,"results":"10","hashOfConfig":"8"},{"size":3940,"mtime":1612035024488,"results":"11","hashOfConfig":"8"},{"size":1243,"mtime":1612035024487,"results":"12","hashOfConfig":"8"},{"size":1294,"mtime":1612038674122,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"tgzmoa",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/ntaylor/code/water/bigtop-viz/src/index.tsx",[],["29","30"],"/Users/ntaylor/code/water/bigtop-viz/src/reportWebVitals.ts",[],["31","32"],"/Users/ntaylor/code/water/bigtop-viz/src/App.tsx",["33","34","35"],"/Users/ntaylor/code/water/bigtop-viz/src/keyframe.ts",[],"/Users/ntaylor/code/water/bigtop-viz/src/components/KeyframeTable.tsx",["36"],"import * as React from 'react';\n\nimport { Keyframe } from '../keyframe';\n\ninterface Props {\n    keyframes: Keyframe[]\n    currentFrame: number\n}\n\nconst PRECISION = 3\n\nconst inputsFromProps = (props: Props) => {\n    const body = props.keyframes.map((kf: Keyframe, i: Number) => {\n        let classname = \"\"\n        if (i == props.currentFrame) {\n            classname += \" highlighted\"\n        }\n        return (\n            <tr className={classname}>\n                <td>{i}</td>\n                <td>{kf.cart_x.toFixed(PRECISION)}</td>\n                <td>{kf.cart_dx.toFixed(PRECISION)}</td>\n                <td>{kf.pole_omega.toFixed(PRECISION)}</td>\n                <td>{kf.pole_omega.toFixed(PRECISION)}</td>\n                <td>{kf.action}</td>\n            </tr>\n        )\n    })\n    return (<tbody>{body}</tbody>)\n}\n\nexport const KeyframeTable = (props: Props) => {\n    return (\n        <div>\n            <table>\n                <thead>\n                    <th>i</th>\n                    <th>x</th>\n                    <th>dx</th>\n                    <th>θ</th>\n                    <th>ω</th>\n                    <th>↔</th>\n                </thead>\n                {inputsFromProps(props)}\n            </table>\n        </div>\n    )\n}","/Users/ntaylor/code/water/bigtop-viz/src/components/PlaybackControls.tsx",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"37","replacedBy":"41"},{"ruleId":"39","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":28,"nodeType":"45","messageId":"46","endLine":1,"endColumn":37},{"ruleId":"47","severity":1,"message":"48","line":62,"column":19,"nodeType":"49","endLine":62,"endColumn":31},{"ruleId":"47","severity":1,"message":"48","line":63,"column":19,"nodeType":"49","endLine":63,"endColumn":31},{"ruleId":"50","severity":1,"message":"51","line":15,"column":15,"nodeType":"52","messageId":"53","endLine":15,"endColumn":17},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],["54"],["55"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]